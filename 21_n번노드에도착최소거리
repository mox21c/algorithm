import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class Solution_21_n번노드에도착최소거리 {
	static int V, E, count, min;
	static int arr[][], visit[], sol[];
	
	public static void main(String args[]) throws FileNotFoundException{
		System.setIn(new FileInputStream("src/resource/Solution_21_n번노드에도착최소거리"));
		Scanner sc = new Scanner(System.in);
		
		int T = sc.nextInt();
		for(int tc = 1 ; tc <= T; tc++){
			
			V = sc.nextInt();
			E = sc.nextInt();
		
			count = 0;
			arr = new int[V+1][V+1];
			visit = new int[V+1];
			sol = new int[V+1];
			min = Integer.MAX_VALUE;
			
			for(int i = 0 ; i < E ; i++){
				
				int n1 = sc.nextInt();
				int n2 = sc.nextInt();
				
				//System.out.println(n1 + " " + n2);
				arr[n1][n2] = 1;
			}
			
		
			
			dfs(0,V,0);
			
			System.out.println("#" + tc + " " + min);
			
			
		}
		
	}
	
	public static void dfs(int n, int k, int e){
		if(n == k){
			min = Math.min(min, e);
			//System.out.println(e);
		}else if(e > min){
			return;
		}else{
			visit[n] = 1;
			for(int i = 0 ; i <= V ; i++){
				if(arr[n][i] == 1 && visit[i] == 0){
					dfs(i,k,e+1);
				}
			}
			visit[n] = 0;
		}
		
		
	}

}
