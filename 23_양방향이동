import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Solution_23_양방향이동 {
	static int arr[][];
	static int map[][];
	static int row, col, min, cnt;
	static int dr[] = {1,0};
	static int dc[] = {0,1};
	public static void main(String[] args) throws FileNotFoundException{
		System.setIn(new FileInputStream("src/resource/Solution_양방향이동"));
		Scanner sc = new Scanner(System.in);
		
		int T = sc.nextInt();
		
		for(int tc = 1 ; tc <= T ; tc++){
			row = sc.nextInt();
			col = sc.nextInt();
			min = Integer.MAX_VALUE;
			map = new int[row][col];
			
			for(int i = 0 ; i < row; i++){
				for(int j = 0 ; j < col ; j++){
					map[i][j] = sc.nextInt();
				}
			}
			
			find(0,0,0);
			System.out.println(min);
			System.out.println(cnt);
		}
	}
	
	public static void find(int x, int y, int s){
		if((x == row-1) && (y == col-1)){
			cnt++;
			if(s + map[x][y] < min){
				min = s + map[x][y];
			}
			
			return;
		}else if(s + map[x][y] >= min){
			return;
		}else{
			
			for(int i = 0 ; i < 2 ; i++){
				int nr = x+dr[i];
				int nc = y+dc[i];
				
				if(nr < row && nc < col){
					find(nr, nc, s+map[x][y]);
				}
			}
			
			/*if(x+1 < row){
				find(x+1, y, s+map[x][y]);
			}
			
			if(y+1 < col){
				find(x, y+1, s+map[x][y]);
			}*/
			
		}
	}
	
	
	
}
