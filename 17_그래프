import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.Scanner;

public class Solution_17_그래프 {
	
	static int adj[][];
	static int V, E, min;
	static int visitd[], sol[];
	
	public static void main(String[] args) throws FileNotFoundException{
		System.setIn(new FileInputStream("src/resource/Solution_17_그래프"));
		Scanner sc = new Scanner(System.in);
		
		int T = sc.nextInt();
		
		for(int tc = 1 ; tc <= T ; tc++){
			V = sc.nextInt();
			E = sc.nextInt();
			min = Integer.MAX_VALUE;
			
			adj = new int[V+1][V+1];
			visitd = new int[V+1];
			sol = new int[V+1];
			
			for(int i = 0 ; i < E ; i++){
				int n1 = sc.nextInt();
				int n2 = sc.nextInt();
				adj[n1][n2] = 1;
				
				//adj[n2][n1] = 1;  //무향그래프인경우
			}
			//dfs(1);
			//System.out.println();
			dfs2(1,4);
			//System.out.println();
			//dfs3(1,4,0);
			//System.out.println(min);
			
		}
	}
	
	public static void dfs(int n){
		
		visitd[n] = 1;
		System.out.print(n + " ");
		for(int i = 1 ; i <= V ; i++){
			if(adj[n][i] == 1 && visitd[i] == 0){
				dfs(i);
			}
		}
		
		visitd[n] = 0;
	}
	
	public static void dfs2(int n, int k){
		if(n == k){
			for(int i = 1 ; i <= V ; i++){
				if(visitd[i]==1){
					System.out.print(i + " ");
				}
				
			}
			System.out.println(n);
		}else{
			visitd[n] = 1;
			//System.out.print(n + " ");
			for(int i = 1 ; i <= V ; i++){
				if(adj[n][i] == 1 && visitd[i] == 0){
					dfs2(i,k);
				}
			}
			visitd[n] = 0;
		}
	}
	
	public static void dfs3(int n, int k, int e){
		if(n == k){
			//System.out.println(e);
			if(e < min){
				min = e;
			}
			
		}else if(e >= min){
			return;
		}
		else{
			visitd[n] = 1;
			for(int i = 1; i <=V ; i++){
				if(adj[n][i] == 1 && visitd[i] == 0){
					dfs3(i,k,e+1);
				}
			}
			visitd[n] = 0;
		}
	}
}
