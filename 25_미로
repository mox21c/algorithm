import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;

public class Solution_25_미로 {

	static int visit[][];
	static char map[][];
	static int row, col, min, cnt, end, N;
	static int dr[] = { -1, 1, 0, 0 };
	static int dc[] = { 0, 0, -1, 1 };

	public static void main(String[] args) throws FileNotFoundException {
		System.setIn(new FileInputStream("src/resource/Solution_25_미로"));
		Scanner sc = new Scanner(System.in);

		int T = sc.nextInt();
		for (int tc = 1; tc <= T; tc++) {
			N = sc.nextInt();
			map = new char[N][N];
			visit = new int[N][N];
			for (int i = 0; i < N; i++) {
				map[i] = sc.next().toCharArray();
			}

			int r = 0;
			for (int i = 0; i < N; i++) {
				for (int j = 0; j < N; j++) {
					if (map[i][j] == '2') {
						r = find(i, j);
					}
					if (r == 1) {
						break;
					}
				}
				if (r == 1) {
					break;
				}
			}
			System.out.println("#"+ tc + " " + r);

		}

	}

	public static int find(int r, int c) {
		if(map[r][c] == '3'){
			return 1;
		}else{
			visit[r][c] = 1;
			for (int i = 0; i < 4; i++) {
				int nr = r + dr[i];
				int nc = c + dc[i];

				if (nr >= 0 && nc >= 0 && nr < N && nc < N) {
					if ((map[nr][nc] == '0'||map[nr][nc] == '3') && visit[nr][nc] == 0) {
						
						if (find(nr, nc) == 1) {
							return 1;
						}
						
					}
				}
			}
			return 0;
		}
		
	}

}
