import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class DP_내리막길_1520 {
	static int m, n, a[][], visit[][], d[][];
	static int n_x[] = {1,-1,0,0};
	static int n_y[] = {0,0,1,-1};
	
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		m = Integer.parseInt(st.nextToken());
		n = Integer.parseInt(st.nextToken());
		
		
		
		a = new int[m+2][n+2];
		d = new int[m+2][n+2];
		
		for(int i = 1 ; i <= m ; i++){
			st = new StringTokenizer(br.readLine());
			for(int j = 1 ; j <= n ; j++){
				a[i][j] = Integer.parseInt(st.nextToken());
				d[i][j] = -1;
			}
		}
		
		int val = go(1,1);
		System.out.println(val);
	}
	
	public static int go(int x, int y){
		
		if(x == m && y == n){
			return 1;
		}
		
		int ret = d[x][y];
		if(ret != -1){
			return d[x][y];
		}
		d[x][y] = 0;
		
		for(int i = 0 ; i < 4 ; i++){
			int next_x = x + n_x[i];
			int next_y = y + n_y[i];
			
			//System.out.println(next_x + " : " + next_y + " : " + m);
			
			if(a[next_x][next_y] < a[x][y] && next_x > 0 && next_x <= m && next_y > 0 && next_y <= n){
				
				d[x][y] += go(next_x,next_y);
				
			}
			
		}
		return d[x][y];
		
	}

}
